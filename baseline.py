# -*- coding: utf-8 -*-
"""Baseline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14azQkYl6L5ik4zg9y6CwIQugVEDuITkF
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory

from google.colab import drive
drive.mount('/content/drive')

recordname = "/content/drive/My Drive/Colab Notebooks/apnea-ecg-database-1.0.0"

!pip3 install wfdb

import wfdb
import matplotlib.pyplot as plt

import glob

recordsDir = recordname
annotationsDir = "/content/drive/My Drive/Colab Notebooks/interpreted-annotations"
record = wfdb.rdsamp(recordname +"/a01")

def record_locater(record_id):
  return recordname + record_id

record = wfdb.rdsamp(record_locater("a04"))

plt.plot(record[0][213000:220000],'r')
plt.title("Sleep Apnea ECG in record a04", fontsize=16)
plt.xlabel("Time/Sample", fontsize=12)
plt.ylabel("ECG (mV)",fontsize=12)

print(record[1])

def spilt_data(record):
  splitarray = []
  count = 0
  for x in range(len(record[0])):
    if(count+25000 > len(record[0])):
      splitarray.append(record[0][count:])
    else:
      splitarray.append(record[0][count:count+25000])
    count += 25000

plt.plot(record[0][4000:6000],'b')
plt.title("Regular ECG in record a04", fontsize=16)
plt.xlabel("Time/Sample", fontsize=12)
plt.ylabel("ECG (mV)",fontsize=12)

def mapAnnotation():
  annotations = glob.glob(annotationsDir + '*.txt')
  print(annotations)
mapAnnotation()

def split_annotations(record):
  splitannotations = []
  count = 0
  for x in range(len(annotation)):
    if(count+25000 > len(annotation)):
      splitannotations.append(annotation[count:])
    else:
      splitannotations.append(annotation[count:count+25000])
    count += 25000

annotation.contained_labels
annotation.get_label_fields()
annotation.symbol[:10]

annotation.contained_labels

annotation.get_label_fields()

annotation.symbol[:10]

labels = np.array(annotation.symbol)
intervals = np.array(annotation.sample)

apnea_idx = np.where(labels=='A')

apnea_idx

apnea_intervals = intervals[apnea_idx]

record[0]

import tensorflow as tf

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=5)

model.evaluate(x_test,  y_test, verbose=2)

BATCH_SIZE = 64
SHUFFLE_BUFFER_SIZE = 100

train_dataset = train_dataset.shuffle(SHUFFLE_BUFFER_SIZE).batch(BATCH_SIZE)
test_dataset = test_dataset.batch(BATCH_SIZE)